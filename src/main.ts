// src/main.ts
import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { HttpException, ValidationPipe } from '@nestjs/common';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';

async function bootstrap() {
  const app = await NestFactory.create(AppModule);

  // Habilita valida√ß√£o global (usa os decorators do class-validator)
  app.useGlobalPipes(new ValidationPipe({
    whitelist: true, // remove propriedades n√£o esperadas do DTO
    forbidNonWhitelisted: true, // lan√ßa erro se receber campo inv√°lido
    transform: true, // converte tipos automaticamente (ex: string -> number)
  }));

  //app.useGlobalFilters(new HttpExceptionFilter());
  // Configura√ß√£o do Swagger
  const config = new DocumentBuilder()
    .setTitle('Plataforma de Gest√£o Escolar/Universit√°ria API')
    .setDescription('Documenta√ß√£o completa para a API RESTful da plataforma de gest√£o, cobrindo m√≥dulos Acad√™micos, Financeiros e de Comunica√ß√£o.')
    .setVersion('1.0')
    .addBearerAuth(
        { type: 'http', scheme: 'bearer', bearerFormat: 'JWT', in: 'header' },
        'access-token', // Nome de refer√™ncia que usaremos para proteger as rotas
    )
    .addTag('Autentica√ß√£o', 'Endpoints para login e gest√£o de tokens JWT')
    .addTag('Usu√°rios', 'CRUD e gest√£o de perfis (Admin, Professor, Aluno, Respons√°vel)')
    .addTag('Classes', 'Gest√£o de turmas, matr√≠culas e associa√ß√µes')
    .addTag('Disciplinas', 'Gest√£o de mat√©rias e curr√≠culo')
    .addTag('Notas (Grades)', 'Lan√ßamento e consulta de notas')
    .addTag('Frequ√™ncia', 'Registro e consulta de presen√ßas/faltas')
    .addTag('Avisos', 'Comunica√ß√£o oficial da escola/universidade')
    .addTag('Faturas', 'Gest√£o de mensalidades e pagamentos')
    .addTag('Relat√≥rios Acad√™micos', 'Agrega√ß√£o de dados para hist√≥rico e desempenho')
    .addTag('Dashboards', 'Resumo de dados por perfil')
    .build();

  const document = SwaggerModule.createDocument(app, config);

  // A documenta√ß√£o ficar√° dispon√≠vel em http://localhost:3000/api-docs
  SwaggerModule.setup('api-docs', app, document);

  await app.listen(3000);
  console.log(`üöÄ Servidor rodando em http://localhost:3000`);
  console.log(`üìò Swagger dispon√≠vel em http://localhost:3000/api-docs`);
}
bootstrap();
